--- src/spvw_fault.d.orig	2017-10-08 11:45:53.000000000 -0600
+++ src/spvw_fault.d	2018-02-18 12:41:32.934240135 -0700
@@ -289,7 +289,7 @@ modexp bool handle_fault_range (int prot
 
 local void xmprotect (aint addr, uintM len, int prot) {
   if (mprotect((void*)addr,len,prot) < 0) {
-    fprintf(stderr,GETTEXTL("mprotect(0x%lx,%d,%d) failed."),addr,len,prot);
+    fprintf(stderr,GETTEXTL("mprotect(0x%lx,%lu,%d) failed."),addr,(unsigned long)len,prot);
     errno_out(OS_errno);
     abort();
   }
--- src/spvw_language.d.orig	2017-05-25 09:49:04.000000000 -0600
+++ src/spvw_language.d	2018-02-18 12:41:32.934240135 -0700
@@ -172,7 +172,7 @@ global void init_language
     { /* Invalidate the gettext internal caches. */
       char *td = textdomain(NULL);
       if (NULL == td) {
-        ANSIC_ERROR("textdomain",NULL);
+        ANSIC_ERROR("textdomain","");
       }
       if (NULL == textdomain(td)) {
         ANSIC_ERROR("textdomain",td);
--- src/spvw_sigsegv.d.orig	2018-01-09 16:04:26.000000000 -0700
+++ src/spvw_sigsegv.d	2018-03-03 13:52:32.985798284 -0700
@@ -62,7 +62,7 @@ local void print_mem_stats (void) {
 /* Put a breakpoint here if you want to catch CLISP just before it dies. */
 global void sigsegv_handler_failed (void* address) {
   fprint(stderr,"\n");
-  fprintf(stderr,GETTEXTL("SIGSEGV cannot be cured. Fault address = 0x%lx."),
+  fprintf(stderr,GETTEXTL("SIGSEGV cannot be cured. Fault address = %p."),
           address);
   fprint(stderr,"\n");
   print_mem_stats();
