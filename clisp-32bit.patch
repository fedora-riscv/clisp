--- src/lispbibl.d.orig	2017-01-28 11:49:38.000000000 -0700
+++ src/lispbibl.d	2017-01-28 14:35:20.257552567 -0700
@@ -1421,7 +1421,6 @@ typedef SLONG   sint32;  /* signed 32 bi
 #define intLsize 32
   typedef signed_int_with_n_bits(intLsize)    sintL;
   typedef unsigned_int_with_n_bits(intLsize)  uintL;
-#if (long_bitsize==64) || defined(DECALPHA) || defined(MIPS64) || defined(SPARC64) || defined(IA64) || defined(AMD64)
   /* Machine has real 64-bit integers in hardware. */
   #define intQsize 64
   typedef signed_int_with_n_bits(intQsize)    sintQ;
@@ -1440,11 +1439,6 @@ typedef SLONG   sint32;  /* signed 32 bi
   #define minus_bitQm(n)  (-(sintQ)2<<((n)-1))
   typedef sintQ  sintL2;
   typedef uintQ  uintL2;
-#else
-  /* Emulate 64-Bit-numbers using two 32-Bit-numbers. */
-  typedef struct { sintL hi; uintL lo; } sintL2; /* signed 64 Bit integer */
-  typedef struct { uintL hi; uintL lo; } uintL2; /* unsigned 64 Bit integer */
-#endif
 /* Use 'uintX' and 'sintX' for Integers with approximately given width
  and a minumum of storage space. */
 %% sprintf(buf,"sint%d",intBsize); emit_typedef(buf,"sintB");
