--- modules/syscalls/posix.lisp.orig	2018-07-18 17:50:36.000000000 -0600
+++ modules/syscalls/posix.lisp	2018-08-01 15:54:47.410580519 -0600
@@ -72,7 +72,7 @@
   (addrtype 2 :type fixnum :read-only t))
 
 ;;; ============================================================
-#+unix (export '(crypt encrypt setkey))
+#+unix (export '(crypt))
 
 #+unix
 (defstruct (user-info (:constructor
--- modules/syscalls/test.tst.orig	2018-07-18 17:50:36.000000000 -0600
+++ modules/syscalls/test.tst	2018-08-01 15:55:58.241645520 -0600
@@ -14,20 +14,6 @@ T
 (> (length (show (os:service) :pretty t)) (length (os:service nil "tcp"))) T
 (equalp (os:service "www" "tcp") (os:service "http" "tcp")) T
 
-#+unix ;; (encrypt (encrypt X t) nil) == X
-(handler-case
-    (let* ((v (make-array 8 :element-type '(unsigned-byte 8))) (u (copy-seq v)))
-      (loop :repeat 10 :do
-        (dotimes (i 8) (setf (aref v i) (setf (aref u i) (random 256))))
-        (os:setkey v) (show (os:encrypt v nil)) (show (os:encrypt v t))
-        :never (if (equalp v u) nil (list v u))))
-  (ext:os-error (err)
-    ;; Solaris (sf cf x86-solaris1 & sparc-solaris1) encrypt fails with
-    ;;  "UNIX error 89 (ENOSYS): Function not implemented"
-    (format t "~S: ~A" 'os:encrypt err)
-    T))
-#+unix T
-
 #+unix (crypt "foo" "bar") #+unix "ba4TuD1iozTxw"
 
 ;; same as "%F %T" on GNU, but more portable
